<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="lab1.2"><sessioninfo id="unknownhost-f78407e9" start="1758363871544" dump="1758363878177"/><sessioninfo id="unknownhost-17c2149" start="1758364269986" dump="1758364278747"/><sessioninfo id="unknownhost-998caacb" start="1758792836794" dump="1758792842523"/><sessioninfo id="unknownhost-2a5e7075" start="1758792963804" dump="1758792968612"/><sessioninfo id="unknownhost-8d97531d" start="1758793646021" dump="1758793651579"/><sessioninfo id="unknownhost-e9e625e5" start="1758793869327" dump="1758793875764"/><sessioninfo id="unknownhost-9cc3bbf6" start="1758793963868" dump="1758793971443"/><sessioninfo id="unknownhost-493fc933" start="1758794033068" dump="1758794038805"/><sessioninfo id="unknownhost-aca20cc1" start="1758794527605" dump="1758794532486"/><sessioninfo id="unknownhost-609a282f" start="1758794638860" dump="1758794646535"/><sessioninfo id="unknownhost-7408620a" start="1758794686181" dump="1758794692347"/><package name=""><class name="Turing" sourcefilename="Turing.java"><method name="&lt;init&gt;" desc="()V" line="1"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print" desc="()V" line="3"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Turing.java"><line nr="1" mi="3" ci="0" mb="0" cb="0"/><line nr="3" mi="3" ci="0" mb="0" cb="0"/><line nr="4" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="my/vector"><class name="my/vector/Vector" sourcefilename="Vector.java"><method name="&lt;init&gt;" desc="(DDD)V" line="5"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PrintCoords" desc="()V" line="16"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Coords" desc="()[D" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Lmy/vector/Vector;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minus" desc="(Lmy/vector/Vector;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scalMultiply" desc="(Lmy/vector/Vector;)D" line="38"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scalMultiply" desc="(D)D" line="46"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divide" desc="(Lmy/vector/Vector;)D" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divide" desc="(D)D" line="62"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="length" desc="()D" line="70"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cosinus" desc="(Lmy/vector/Vector;)D" line="78"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bigger" desc="(Lmy/vector/Vector;)Z" line="82"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equal" desc="(Lmy/vector/Vector;)Z" line="91"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="70" covered="149"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="15" covered="29"/><counter type="COMPLEXITY" missed="9" covered="14"/><counter type="METHOD" missed="5" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Vector.java"><line nr="5" mi="0" ci="4" mb="0" cb="0"/><line nr="7" mi="0" ci="2" mb="0" cb="0"/><line nr="8" mi="0" ci="5" mb="0" cb="0"/><line nr="9" mi="0" ci="5" mb="0" cb="0"/><line nr="10" mi="0" ci="5" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="7" ci="0" mb="2" cb="0"/><line nr="17" mi="6" ci="0" mb="0" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="20" mi="1" ci="0" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="2"/><line nr="27" mi="0" ci="11" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="0" cb="2"/><line nr="33" mi="0" ci="11" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="2"/><line nr="40" mi="0" ci="12" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="2"/><line nr="48" mi="0" ci="9" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="2"/><line nr="56" mi="0" ci="12" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="2"/><line nr="64" mi="0" ci="9" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="7" ci="0" mb="2" cb="0"/><line nr="72" mi="12" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="10" ci="0" mb="0" cb="0"/><line nr="82" mi="6" ci="0" mb="2" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="2" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="70" covered="149"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="15" covered="29"/><counter type="COMPLEXITY" missed="9" covered="14"/><counter type="METHOD" missed="5" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="70" covered="149"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="15" covered="29"/><counter type="COMPLEXITY" missed="9" covered="14"/><counter type="METHOD" missed="5" covered="8"/><counter type="CLASS" missed="0" covered="1"/></package><counter type="INSTRUCTION" missed="77" covered="149"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="18" covered="29"/><counter type="COMPLEXITY" missed="11" covered="14"/><counter type="METHOD" missed="7" covered="8"/><counter type="CLASS" missed="1" covered="1"/></report>